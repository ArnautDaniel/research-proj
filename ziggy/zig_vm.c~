#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

// A Zig Stack Item is simply a pointer to a character string
// holding an instruction that has to be parsed
struct zig_stack_item {
  char* data;
};

// A Zig stack is self explanatory
struct zig_stack {
  struct zig_stack_item* data;
  struct zig_stack_item* parent;
  struct zig_stack_item* child;
};

//The Zig_VM is two int registers, two float registers, a zig_stack
//and the current instruction being pointed at.
struct zig_vm {
  struct zig_stack_item* ip;
  int xp;
  int yp;
  float zf;
  float pf;
  struct zig_stack* stack;
  int current_tag;
  int current_time;
};

struct zig_vm* return_zig_vm(){
  struct zig_vm vm = {NULL, 0, 0, 0.0, 0.0, NULL, 0, 0};
  struct zig_vm* x = &vm;
  return x;
}

struct zig_stack* return_zig_stack(){
  struct zig_stack stack = {NULL, NULL, NULL};
  struct zig_stack* x = &stack;
  return x;
}

int main (int argc, char** argv){
  struct zig_stack* stack;
  struct zig_vm* vm = return_zig_vm();
  vm->stack = return_zig_stack();
  printf("Made first Zig_VM with xp: %d\n", vm->xp);
  return 0;
}


